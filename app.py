# -*- coding: utf-8 -*-
"""Deployment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19L6Jo-0yUJofnmFsWnXAsmqpWg36nktG
"""

import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np
import time

@st.cache(allow_output_mutation=True)
def load_model():
    model = tf.keras.models.load_model('weights-improvement-16-0.89.hdf5')
    return model

model = load_model()
st.title("üçèüçÖ Apples Tomatoes Classifier :)")

file = st.file_uploader("Choose an image of an apple or tomato from your computer", type=["jpg", "png"])

def import_and_predict(image_data, model):
    size = (128, 128)
    image = ImageOps.fit(image_data, size, Image.LANCZOS)
    image = np.asarray(image)
    image = image / 255.0
    img_reshape = np.reshape(image, (1, 128, 128, 3))
    prediction = model.predict(img_reshape)
    return prediction

if file is None:
    st.text("Please upload an image file (Apple or Tomato)")
else:
    st.write('Starting a long computation...')
    
    # Add a placeholder
    latest_iteration = st.empty()
    bar = st.progress(0)
    
    for i in range(100):
        # Update the progress bar with each iteration.
        latest_iteration.text(f'Loading {i + 1}')
        bar.progress(i + 1)
        time.sleep(0.1)
    
    st.write('...and now we\'re done!')
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['Apple', 'Tomato']
    string = "OUTPUT: " + class_names[np.argmax(prediction)]
    st.success(string)

    # Add a feedback feature
    feedback_options = ['Correct', 'Incorrect']
    feedback = st.radio("Feedback: Was the prediction correct?", feedback_options)
    
    if feedback:
        st.write(f"User feedback: {feedback}")

    # Add a submit button
    if st.button("Submit"):
        st.write("Feedback submitted. Thank you!")
